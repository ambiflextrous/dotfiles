# SETTINGS
set open_all_images true
set vcs_aware false
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set preview_images true
set preview_images_method w3m




#BASIC KEYS###

#BASIC
map     Q quit!
map     q quit
copymap q ZZ ZQ

#map R     reload_cwd
map <C-r> reset
#map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal

map i display_file
map ? help
#map W display_log
map w taskview_open
map S shell $SHELL

map :  console
map ;  console
map !  console shell%space
map @  console -p6 shell  %s
map #  console shell -p%space
#map s  console shell%space
map r  chain draw_possible_programs; console open_with%%space
map f  console find%space
map cd console cd%space


# Change the line mode
#map Mf linemode filename
#map Mi linemode fileinfo
#map Mp linemode permissions
#map Mt linemode metatitle

#moc
#map Mc shell mocp -c
#map Ma shell mocp -a %s
#map Ms shell mocp -p
#map MS shell mocp -S
#map Mp shell mocp -G
#map Mn shell mocp -f
#map Mb shell mocp -r
#map MN shell mocp -s && mocp -c && mocp -a %s && mocp -p
#map Mo shell mocp -j 0%%
#map MK shell killall mocp



# Tagging / Marking
map at      tag_toggle
map ut      tag_remove
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map va       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map vs       toggle_visual_mode
map uV toggle_visual_mode reverse=True


M-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>


# Jumping around
 map H     history_go -1
 map L     history_go 1
 map ]     move_parent 1
 map [     move_parent -1
 map }     traverse

 #DEFAULT MOVEMENT
 map ge cd /etc
 map gu cd /usr
 #map gl cd -r .
 map gL cd -r %f
 #map gv cd /var
 map gM cd /mnt
 map gr cd /
 map gR eval fm.cd(ranger.RANGERDIR)
 map g? cd /usr/share/doc/ranger

 # Tabs
 map <C-n>     tab_new ~
 map <C-w>     tab_close
 map <TAB>     tab_move 1
 map <S-TAB>   tab_move -1
 map <A-Right> tab_move 1
 map <A-Left>  tab_move -1
 #map gt        tab_move 1
 #map gT        tab_move -1
 map gn        tab_new ~
 #map gc        tab_close
 map tt tab_close
 map uq        tab_restore
 map <a-1>     tab_open 1
 map <a-2>     tab_open 2
 map <a-3>     tab_open 3
 map <a-4>     tab_open 4
 map <a-5>     tab_open 5
 map <a-6>     tab_open 6
 map <a-7>     tab_open 7
 map <a-8>     tab_open 8
 map <a-9> tab_open 9


ystem Operations
map =  chmod
map cw console rename%space
map aa  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path)
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path, position=7)
map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
map phl paste_hardlink
map pht paste_hardlinked_subtree

map dD console delete

map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove

map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
earching
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime


# Sorting
map or toggle_option sort_reverse
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

map dc get_cumulative_size


# Settings
map zc    toggle_option collapse_preview
map zd    toggle_option sort_directories_first
map zh    toggle_option show_hidden
map <C-h> toggle_option show_hidden
map zi    toggle_option flushinput
map zm    toggle_option mouse_enabled
map zp    toggle_option preview_files
map zP    toggle_option preview_directories
map zs    toggle_option sort_case_insensitive
map zu    toggle_option autoupdate_cumulative_size
map zv    toggle_option use_preview_script
map zf    console filter%space


# Bookmarks
#map `<any>  enter_bookmark %any
#map '<any>  enter_bookmark %any
#map mm<any>  set_bookmark %any
#map um<any> unset_bookmark %any

#map m<bg>   draw_bookmarks
#copymap m<bg>  um<bg> `<bg> '<bg>


# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))


###CONSOLE KEYS###
# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
#cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>


# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)


# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y> eval fm.ui.console.paste()
